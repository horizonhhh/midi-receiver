/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PAGE_SETUP = "header_footer\
Date: %D\
%f\
Project: %j\
\
Page %p of %P\
Revision: %a\
margin\
1\
1\
1\
1\
orientation\
2\
paper_size\
1\
paper_source\
15\
fit_page_wide\
1\
fit_page_tall\
1\
";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 4500000.0;
	SIMULATION_TIME = 4500000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 32000.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DATA")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RESET")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("LED")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LED[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("LED[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("LED[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("LED[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("LED[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("LED[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("LED[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("LED[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("CLK_EN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("NOTE_SAMPLE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("BIT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("BIT[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BIT";
}

SIGNAL("BIT[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BIT";
}

SIGNAL("BIT[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BIT";
}

SIGNAL("BIT[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BIT";
}

SIGNAL("BYTE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("BYTE[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BYTE";
}

SIGNAL("BYTE[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BYTE";
}

SIGNAL("MSG")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 10367;
			LEVEL 0 FOR 125.0;
			LEVEL 1 FOR 125.0;
		}
		LEVEL 0 FOR 125.0;
		LEVEL 1 FOR 125.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 125.0;
			LEVEL 1 FOR 125.0;
			NODE
			{
				REPEAT = 255;
				LEVEL 0 FOR 125.0;
				LEVEL 1 FOR 125.0;
			}
		}
		LEVEL 0 FOR 125.0;
		LEVEL 1 FOR 125.0;
		NODE
		{
			REPEAT = 7375;
			LEVEL 0 FOR 125.0;
			LEVEL 1 FOR 125.0;
		}
	}
}

TRANSITION_LIST("DATA")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 32000.0;
		LEVEL 0 FOR 32000.0;
		LEVEL D FOR 256000.0;
		LEVEL 1 FOR 32000.0;
		LEVEL 0 FOR 96000.0;
		LEVEL 1 FOR 128000.0;
		LEVEL 0 FOR 64000.0;
		LEVEL 1 FOR 128000.0;
		LEVEL 0 FOR 32000.0;
		LEVEL D FOR 256000.0;
		LEVEL 1 FOR 96000.0;
		LEVEL 0 FOR 32000.0;
		LEVEL D FOR 256000.0;
		LEVEL 1 FOR 32000.0;
		LEVEL 0 FOR 32000.0;
		LEVEL D FOR 256000.0;
		LEVEL 1 FOR 128000.0;
		LEVEL 0 FOR 32000.0;
		LEVEL D FOR 256000.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 32000.0;
		LEVEL D FOR 256000.0;
		LEVEL 1 FOR 32000.0;
		LEVEL 0 FOR 32000.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 128000.0;
		LEVEL 1 FOR 32000.0;
		LEVEL 0 FOR 32000.0;
		LEVEL 1 FOR 128000.0;
		LEVEL 0 FOR 32000.0;
		LEVEL D FOR 256000.0;
		LEVEL 1 FOR 96000.0;
		LEVEL 0 FOR 32000.0;
		LEVEL D FOR 256000.0;
		LEVEL 1 FOR 32000.0;
		LEVEL 0 FOR 32000.0;
		LEVEL D FOR 256000.0;
		LEVEL 1 FOR 128000.0;
		LEVEL 0 FOR 32000.0;
		LEVEL D FOR 256000.0;
		LEVEL 1 FOR 116000.0;
	}
}

TRANSITION_LIST("RESET")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8000.0;
		LEVEL 1 FOR 4492000.0;
	}
}

TRANSITION_LIST("LED[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4500000.0;
	}
}

TRANSITION_LIST("LED[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3263875.0;
		LEVEL 1 FOR 1120000.0;
		LEVEL 0 FOR 116125.0;
	}
}

TRANSITION_LIST("LED[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1055875.0;
		LEVEL 1 FOR 1120000.0;
		LEVEL 0 FOR 2324125.0;
	}
}

TRANSITION_LIST("LED[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1055875.0;
		LEVEL 1 FOR 1120000.0;
		LEVEL 0 FOR 2324125.0;
	}
}

TRANSITION_LIST("LED[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1055875.0;
		LEVEL 1 FOR 1120000.0;
		LEVEL 0 FOR 2324125.0;
	}
}

TRANSITION_LIST("LED[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1055875.0;
		LEVEL 1 FOR 1120000.0;
		LEVEL 0 FOR 2324125.0;
	}
}

TRANSITION_LIST("LED[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3263875.0;
		LEVEL 1 FOR 1120000.0;
		LEVEL 0 FOR 116125.0;
	}
}

TRANSITION_LIST("LED[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3263875.0;
		LEVEL 1 FOR 1120000.0;
		LEVEL 0 FOR 116125.0;
	}
}

TRANSITION_LIST("CLK_EN")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 32375.0;
		LEVEL 1 FOR 288500.0;
		LEVEL 0 FOR 31500.0;
		LEVEL 1 FOR 288000.0;
		LEVEL 0 FOR 128000.0;
		LEVEL 1 FOR 288000.0;
		LEVEL 0 FOR 96000.0;
		LEVEL 1 FOR 288000.0;
		LEVEL 0 FOR 32000.0;
		LEVEL 1 FOR 288000.0;
		LEVEL 0 FOR 128000.0;
		LEVEL 1 FOR 288000.0;
		LEVEL 0 FOR 64000.0;
		LEVEL 1 FOR 288000.0;
		LEVEL 0 FOR 32000.0;
		LEVEL 1 FOR 288000.0;
		LEVEL 0 FOR 128000.0;
		LEVEL 1 FOR 288000.0;
		LEVEL 0 FOR 96000.0;
		LEVEL 1 FOR 288000.0;
		LEVEL 0 FOR 32000.0;
		LEVEL 1 FOR 288000.0;
		LEVEL 0 FOR 128000.0;
		LEVEL 1 FOR 288000.0;
		LEVEL 0 FOR 115625.0;
	}
}

TRANSITION_LIST("NOTE_SAMPLE")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 400125.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 250.0;
			LEVEL 0 FOR 31750.0;
		}
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 1983750.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 250.0;
			LEVEL 0 FOR 31750.0;
		}
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 1667625.0;
	}
}

TRANSITION_LIST("BIT[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 288375.0;
		LEVEL 1 FOR 64250.0;
		LEVEL 0 FOR 255250.0;
		LEVEL 1 FOR 160750.0;
		LEVEL 0 FOR 255250.0;
		LEVEL 1 FOR 128750.0;
		LEVEL 0 FOR 255250.0;
		LEVEL 1 FOR 64750.0;
		LEVEL 0 FOR 255250.0;
		LEVEL 1 FOR 160750.0;
		LEVEL 0 FOR 255250.0;
		LEVEL 1 FOR 96750.0;
		LEVEL 0 FOR 255250.0;
		LEVEL 1 FOR 64750.0;
		LEVEL 0 FOR 255250.0;
		LEVEL 1 FOR 160750.0;
		LEVEL 0 FOR 255250.0;
		LEVEL 1 FOR 128750.0;
		LEVEL 0 FOR 255250.0;
		LEVEL 1 FOR 64750.0;
		LEVEL 0 FOR 255250.0;
		LEVEL 1 FOR 160750.0;
		LEVEL 0 FOR 255250.0;
		LEVEL 1 FOR 148125.0;
	}
}

TRANSITION_LIST("BIT[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 160375.0;
		LEVEL 1 FOR 128000.0;
		LEVEL 0 FOR 191500.0;
		LEVEL 1 FOR 128000.0;
		LEVEL 0 FOR 288000.0;
		LEVEL 1 FOR 128000.0;
		LEVEL 0 FOR 256000.0;
		LEVEL 1 FOR 128000.0;
		LEVEL 0 FOR 192000.0;
		LEVEL 1 FOR 128000.0;
		LEVEL 0 FOR 288000.0;
		LEVEL 1 FOR 128000.0;
		LEVEL 0 FOR 224000.0;
		LEVEL 1 FOR 128000.0;
		LEVEL 0 FOR 192000.0;
		LEVEL 1 FOR 128000.0;
		LEVEL 0 FOR 288000.0;
		LEVEL 1 FOR 128000.0;
		LEVEL 0 FOR 256000.0;
		LEVEL 1 FOR 128000.0;
		LEVEL 0 FOR 192000.0;
		LEVEL 1 FOR 128000.0;
		LEVEL 0 FOR 288000.0;
		LEVEL 1 FOR 128000.0;
		LEVEL 0 FOR 148125.0;
	}
}

TRANSITION_LIST("BIT[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 96375.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 64000.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 127500.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 64000.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 224000.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 64000.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 192000.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 64000.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 128000.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 64000.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 224000.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 64000.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 160000.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 64000.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 128000.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 64000.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 224000.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 64000.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 192000.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 64000.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 128000.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 64000.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 224000.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 64000.0;
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 148125.0;
	}
}

TRANSITION_LIST("BIT[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 64375.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 32000.0;
			LEVEL 0 FOR 32000.0;
		}
		LEVEL 1 FOR 32250.0;
		LEVEL 0 FOR 31250.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 32000.0;
			LEVEL 0 FOR 32000.0;
		}
		LEVEL 1 FOR 128750.0;
		LEVEL 0 FOR 31250.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 32000.0;
			LEVEL 0 FOR 32000.0;
		}
		LEVEL 1 FOR 96750.0;
		LEVEL 0 FOR 31250.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 32000.0;
			LEVEL 0 FOR 32000.0;
		}
		LEVEL 1 FOR 32750.0;
		LEVEL 0 FOR 31250.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 32000.0;
			LEVEL 0 FOR 32000.0;
		}
		LEVEL 1 FOR 128750.0;
		LEVEL 0 FOR 31250.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 32000.0;
			LEVEL 0 FOR 32000.0;
		}
		LEVEL 1 FOR 64750.0;
		LEVEL 0 FOR 31250.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 32000.0;
			LEVEL 0 FOR 32000.0;
		}
		LEVEL 1 FOR 32750.0;
		LEVEL 0 FOR 31250.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 32000.0;
			LEVEL 0 FOR 32000.0;
		}
		LEVEL 1 FOR 128750.0;
		LEVEL 0 FOR 31250.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 32000.0;
			LEVEL 0 FOR 32000.0;
		}
		LEVEL 1 FOR 96750.0;
		LEVEL 0 FOR 31250.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 32000.0;
			LEVEL 0 FOR 32000.0;
		}
		LEVEL 1 FOR 32750.0;
		LEVEL 0 FOR 31250.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 32000.0;
			LEVEL 0 FOR 32000.0;
		}
		LEVEL 1 FOR 128750.0;
		LEVEL 0 FOR 31250.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 32000.0;
			LEVEL 0 FOR 32000.0;
		}
		LEVEL 1 FOR 116125.0;
	}
}

TRANSITION_LIST("BYTE[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 639875.0;
		LEVEL 1 FOR 416000.0;
		LEVEL 0 FOR 704000.0;
		LEVEL 1 FOR 416000.0;
		LEVEL 0 FOR 672000.0;
		LEVEL 1 FOR 416000.0;
		LEVEL 0 FOR 704000.0;
		LEVEL 1 FOR 416000.0;
		LEVEL 0 FOR 116125.0;
	}
}

TRANSITION_LIST("BYTE[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 320375.0;
		LEVEL 1 FOR 319500.0;
		LEVEL 0 FOR 800000.0;
		LEVEL 1 FOR 320000.0;
		LEVEL 0 FOR 768000.0;
		LEVEL 1 FOR 320000.0;
		LEVEL 0 FOR 800000.0;
		LEVEL 1 FOR 320000.0;
		LEVEL 0 FOR 532125.0;
	}
}

TRANSITION_LIST("MSG")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1055875.0;
		LEVEL 1 FOR 1120000.0;
		LEVEL 0 FOR 1088000.0;
		LEVEL 1 FOR 1120000.0;
		LEVEL 0 FOR 116125.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "LED";
	EXPAND_STATUS = EXPANDED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4, 5, 6, 7, 8;
}

DISPLAY_LINE
{
	CHANNEL = "LED[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LED[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LED[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LED[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LED[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LED[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LED[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LED[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MSG";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "BYTE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12;
}

DISPLAY_LINE
{
	CHANNEL = "BYTE[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "BYTE[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "BIT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
	CHILDREN = 14, 15, 16, 17;
}

DISPLAY_LINE
{
	CHANNEL = "BIT[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "BIT[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "BIT[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "BIT[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "CLK_EN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DATA";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RESET";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "NOTE_SAMPLE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 320000000;
	MASTER = TRUE;
}
;
